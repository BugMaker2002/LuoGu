#include <iostream>
using namespace std;
/**
 * @brief 
 * 数组a用于保存阶乘的结果，因为n的值最多也就是1000，
 * 最终结果的位数不会超过50000位，所以我们选择将数组的大小设置为50000
 */
int a[5000];
int main()
{
    int t;
    cin>>t;
    while (t--)
    {
        int n,m,sum=0;
        cin>>n>>m;
        /**
         * @brief 
         * 1.记得每轮把数组a清空
         * 2.数组a的第1位要设为1，不然没法去乘
         */
        for (int i = 1; i <= 11; i++)
        {
            a[i]=0;
        }
        a[1]=1;
        /**
         * @brief 
         * 我们求阶乘的大体思路就是：
         * 1.对每次的数组a，我们都用2~n之间的数去乘以它，并保存乘得的中间结果，
         *   这样n-1轮过后a中存放的数就是最终的结果（前面放低位）
         * 2.每次对a乘以i的时候，需要考虑进位等事项
         * 3.用jw去表示进位
         * 4.用p表示每次数组a保存的中间结果的长度，初始为1
         * 5.用变量j去记录
         */
        int jw=0,p=1,j;
        for (int i = 2; i <= n; i++)
        {
            for (j = 1; j <=p; j++)
            {
                a[j]=a[j]*i+jw;
                jw=a[j]/10;
                a[j]%=10;
            }
            /**
             * @brief 
             * 如果还有进位，就往前放
             * 记得j每次都得++，因为j记录的是中间结果的长度
             * 记得更新p
             */
            while (jw>0)
            {
                a[j]=jw%10;
                jw/=10;
                j++;
            }
            p=j-1;
        }
        for (int i = 1; i <= p; i++)
        {
            if (a[i]==m)
            {
                sum++;
            }
        }
        cout<<sum<<endl;
    }
}